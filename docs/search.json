[{"path":"https://montilab.github.io/SigRepo/articles/retrieveSignatures.html","id":"configuration","dir":"Articles","previous_headings":"","what":"Configuration","title":"Retrieve Signatures","text":"SigRepoR interacts servers (possibly) current working computer. Therefor, proceeding uploading signatures, ’s important first configure session point database upload , along write files file system.","code":"configureSigRepo(     # Where do the OmicSignatures live in the server's fileSystem?     signatureDirectory=         \"/opt/shiny-server/challenge_project/miscellanea/signatures/\",     databaseServer=\"sigrepo.bu.edu\", # Where's the database?     databasePort=\"4253\", # What port is the database server using?     applicationPort=\"\",     signatureServer=\"sigrepo.bu.edu\" # What server has the OmicSignatures? )"},{"path":"https://montilab.github.io/SigRepo/articles/retrieveSignatures.html","id":"retrieve-signatures","dir":"Articles","previous_headings":"","what":"Retrieve Signatures","title":"Retrieve Signatures","text":"Now, can retrieve signatures ways","code":""},{"path":"https://montilab.github.io/SigRepo/articles/retrieveSignatures.html","id":"getsignatures","dir":"Articles","previous_headings":"Retrieve Signatures","what":"getSignatures()","title":"Retrieve Signatures","text":"function returns named list metadata: containing general information signature level2: requested, level2 signature representation signatures can get signatures based list signature names, granular queries, can use sqlFindingQuery()","code":""},{"path":"https://montilab.github.io/SigRepo/articles/retrieveSignatures.html","id":"sqlfindingquery","dir":"Articles","previous_headings":"Retrieve Signatures","what":"sqlFindingQuery","title":"Retrieve Signatures","text":"can use sqlFindingQuery query SQL database interest without prior knowledge SQL. want grab level2 data function, can either make query scratch, pass complex “subqueries” based search critera","code":"# gets general metadata for signatures #  exampleSignatures <- sqlFindingQuery(     \"signature_view\",     fields=c(\"signature_name\"),     # Now for the query     # Here I just want human signatures     ins=list(         \"species\"=c(\"Homo sapiens\")     ) ) sqlFindingQuery(     \"feature_signature_view\",     ins = list(         \"signature_name\" = sqlFindingQuery(             \"signature_view\",             fields = c(\"signature_name\"),             # Now for the query             # Here I just want human signatures             ins = list(\"species\" = c(\"Homo sapiens\"))         )$signature_name     ) ) sqlFindingQuery(     \"feature_signature_view\",     ins = list(         \"signature_name\" = exampleSignatures     ) )"},{"path":"https://montilab.github.io/SigRepo/articles/retrieveSignatures.html","id":"retrieve-other-information","dir":"Articles","previous_headings":"","what":"Retrieve Other Information","title":"Retrieve Signatures","text":"Perhaps helpful tools starting , familiar database setup, getTables getTableFields","code":""},{"path":"https://montilab.github.io/SigRepo/articles/retrieveSignatures.html","id":"database-information","dir":"Articles","previous_headings":"Retrieve Other Information","what":"Database Information","title":"Retrieve Signatures","text":"getTables list tables views database want know fields given table, helpful removing fields may want query, getTableFields(tableName) lists fields given table, along datatypes","code":"getTables() getTableFields(\"signature_view\")"},{"path":"https://montilab.github.io/SigRepo/articles/retrieveSignatures.html","id":"platforms","dir":"Articles","previous_headings":"Retrieve Other Information","what":"Platforms","title":"Retrieve Signatures","text":"getAssayPlatforms() gets assay platforms exist SigRepo DB instance ’re pointing .","code":"getAssayPlatforms()"},{"path":"https://montilab.github.io/SigRepo/articles/retrieveSignatures.html","id":"level-2-representation","dir":"Articles","previous_headings":"Retrieve Other Information","what":"Level 2 Representation","title":"Retrieve Signatures","text":"just want level 2 representation signatures interest, getLevel2 . ’s essentially wrapper sqlFindingQuery pointing feature_view table database. signature-feature pair, ’ll get name feature, score, direction.","code":"getLevel2(     insList=list(         \"same_structure\"=c(\"As the ins parameter in sqlFindingQuery\")     ) )"},{"path":"https://montilab.github.io/SigRepo/articles/uploadSignatures.html","id":"configuration","dir":"Articles","previous_headings":"","what":"Configuration","title":"Upload Signatures","text":"SigRepoR interacts servers (possibly) current working computer. Therefor, proceeding uploading signatures, ’s important first configure session point database upload , along write files file system. Now, downstream queries, ’ll able establish connections future without needing specify server query repeatedly. Assuming already OmicSignature object created, let’s work uploading.","code":"configureSigRepo(     # Where do the OmicSignatures live in the server's fileSystem?     signatureDirectory=         \"/opt/shiny-server/challenge_project/miscellanea/signatures/\",     databaseServer=\"sigrepo.bu.edu\", # Where's the database?     databasePort=\"4253\", # What port is the database server using?     applicationPort=\"\",     signatureServer=\"sigrepo.bu.edu\" # What server has the OmicSignatures? )"},{"path":"https://montilab.github.io/SigRepo/articles/uploadSignatures.html","id":"uploading-omicsignature-object","dir":"Articles","previous_headings":"","what":"Uploading OmicSignature Object","title":"Upload Signatures","text":"upload object completely back-end executing : writes object file disk inserts signature metadata signatures table database(addSignature) inserts level2 data object features_signatures table database(addLevel2). inserts signature-keyword pairs keyword_signatures table database(addSignatureKeywords).","code":"addSignatureWrapper(     yourObjectOrFileOfObject,     thisHandle=yourConnectionHandle,     uploadPath=sys.getenv(\"signatureDirectory\"),     user=\"your SigRepo Username\",     verbose=T )"},{"path":"https://montilab.github.io/SigRepo/articles/uploadSignatures.html","id":"uploading-omicsignaturecollection-objects","dir":"Articles","previous_headings":"","what":"Uploading OmicSignatureCollection Objects","title":"Upload Signatures","text":"OmicSignatureCollection Objects simply group Omic Signature objects. can upload objects like : function: “unpacks” OmicSignatureCollection getting “OmicSigList” property runs lapply function “addSignatureWrapper” list inserts signature--collection pairs signature--collection table database(addCollectionSignatures) collection ’re uploading doesn’t exist entry collections table database, addCollectionSignatures function add collection new entry collections table uploading pairs.","code":"addSignatureCollection(     OmicSignatureCollectionObj,      connHandle,   uploadPath=sys.getenv(\"signatureDirectory\"),    thisUser=\"your SigRepo User Name\" )"},{"path":"https://montilab.github.io/SigRepo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Reina Chau. Author, maintainer. Mengze Li. Author. Stefano Monti. Author.","code":""},{"path":"https://montilab.github.io/SigRepo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chau R, Li M, Monti S (2025). SigRepo: Storing processing omic signature. R package version 1.0.0, https://github.com/montilab/SigRepo/.","code":"@Manual{,   title = {SigRepo: Storing and processing omic signature},   author = {Reina Chau and Mengze Li and Stefano Monti},   year = {2025},   note = {R package version 1.0.0},   url = {https://github.com/montilab/SigRepo/}, }"},{"path":[]},{"path":"https://montilab.github.io/SigRepo/index.html","id":"contacts","dir":"","previous_headings":"","what":"Contacts","title":"SigRepoR","text":"Reina Chau - rchau88@bu.edu Vanessa Mengze Li - vmli@bu.edu Stefano Monti - smonti@bu.edu","code":""},{"path":"https://montilab.github.io/SigRepo/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"SigRepoR","text":"Using devtools package","code":"library(devtools) devtools::install_github(\"montilab/SigRepo\")"},{"path":"https://montilab.github.io/SigRepo/index.html","id":"how-to-connect-to-sigrepo-database","dir":"","previous_headings":"","what":"How to connect to SigRepo database","title":"SigRepoR","text":"Load packages Connect SigRepo database using RMySQL driver ‘guest’ access See user connection information","code":"library(RMySQL) library(DBI) library(SigRepo) conn <- SigRepo::newConnHandler(   driver = RMySQL::MySQL(),   dbname = \"sigrepo\",   host = \"montilab.bu.edu\",   port = 3306,   user = \"guest\",   password = \"guest\" ) conn_info <- DBI::dbGetInfo(conn) conn_info $host [1] \"montilab.bu.edu\"  $user [1] \"guest\"  $dbname [1] \"sigrepo\"  $conType [1] \"montilab.bu.edu via TCP/IP\"  $serverVersion [1] \"8.3.0\"  $protocolVersion [1] 10  $threadId [1] 124  $rsId list()"},{"path":"https://montilab.github.io/SigRepo/index.html","id":"database-schemas-are-stored-at","dir":"","previous_headings":"","what":"Database Schemas are stored at:","title":"SigRepoR","text":"inst/init/00-sigrepo-initiate-table-schemas.R","code":""},{"path":"https://montilab.github.io/SigRepo/index.html","id":"shiny-application-is-stored-at","dir":"","previous_headings":"","what":"Shiny Application is stored at:","title":"SigRepoR","text":"inst/shiny/app.R","code":""},{"path":"https://montilab.github.io/SigRepo/index.html","id":"plumber-api-is-stored-at","dir":"","previous_headings":"","what":"Plumber API is stored at:","title":"SigRepoR","text":"inst/shiny/sigrepo_api.R","code":""},{"path":"https://montilab.github.io/SigRepo/news/news-1.0.html","id":"sigrepo-100","dir":"News","previous_headings":"","what":"SigRepo 1.0.0","title":"Version 1.0","text":"Documentation: https://montilab.github.io/SigRepo/ GitHub: https://github.com/montilab/SigRepo/","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addKeyword.html","id":null,"dir":"Reference","previous_headings":"","what":"addKeyword — addKeyword","title":"addKeyword — addKeyword","text":"Add keywords database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addKeyword.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"addKeyword — addKeyword","text":"","code":"addKeyword(conn_handler, keyword_tbl)"},{"path":"https://montilab.github.io/SigRepo/reference/addKeyword.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"addKeyword — addKeyword","text":"conn_handler established connection database using newConnhandler() keyword_tbl data frame containing appropriate column names: keyword","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addOrganism.html","id":null,"dir":"Reference","previous_headings":"","what":"addOrganism — addOrganism","title":"addOrganism — addOrganism","text":"Add organism database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addOrganism.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"addOrganism — addOrganism","text":"","code":"addOrganism(conn_handler, organism_tbl)"},{"path":"https://montilab.github.io/SigRepo/reference/addOrganism.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"addOrganism — addOrganism","text":"conn_handler established connection database using newConnhandler() organism_tbl data frame containing appropriate column names: organism","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addPhenotype.html","id":null,"dir":"Reference","previous_headings":"","what":"addPhenotype — addPhenotype","title":"addPhenotype — addPhenotype","text":"Add phenotype database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addPhenotype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"addPhenotype — addPhenotype","text":"","code":"addPhenotype(conn_handler, phenotype_tbl)"},{"path":"https://montilab.github.io/SigRepo/reference/addPhenotype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"addPhenotype — addPhenotype","text":"conn_handler established connection database using newConnhandler() phenotype_tbl data frame containing appropriate column names: phenotype","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addPlatform.html","id":null,"dir":"Reference","previous_headings":"","what":"addPlatform — addPlatform","title":"addPlatform — addPlatform","text":"Add platform database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addPlatform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"addPlatform — addPlatform","text":"","code":"addPlatform(conn_handler, platform_tbl)"},{"path":"https://montilab.github.io/SigRepo/reference/addPlatform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"addPlatform — addPlatform","text":"conn_handler established connection database using newConnhandler() platform_tbl data frame containing appropriate column names:  platform_id, platform_name, seq_technology, organisms uploaded  database.","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addRefFeatureSet.html","id":null,"dir":"Reference","previous_headings":"","what":"addRefFeatureSet — addRefFeatureSet","title":"addRefFeatureSet — addRefFeatureSet","text":"Add reference feature set database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addRefFeatureSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"addRefFeatureSet — addRefFeatureSet","text":"","code":"addRefFeatureSet(   conn_handler,   assay_type = c(\"transcriptomics\", \"proteomics\", \"metabolomics\", \"methylomics\",     \"genetic_variations\", \"dna_binding_sites\"),   feature_set )"},{"path":"https://montilab.github.io/SigRepo/reference/addRefFeatureSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"addRefFeatureSet — addRefFeatureSet","text":"conn_handler established connection database using newConnhandler() assay_type Type assays: transcriptomics, proteomics, metabolomics,  methylomics, genetic_variations, dna_binding_sites feature_set data frame containing appropriate column names","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addSampleType.html","id":null,"dir":"Reference","previous_headings":"","what":"addSampleType — addSampleType","title":"addSampleType — addSampleType","text":"Add sample_type database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addSampleType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"addSampleType — addSampleType","text":"","code":"addSampleType(conn_handler, sample_type_tbl)"},{"path":"https://montilab.github.io/SigRepo/reference/addSampleType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"addSampleType — addSampleType","text":"conn_handler established connection database using newConnhandler() sample_type_tbl data frame containing appropriate column names: sample_type, brenda_accession","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addSignature.html","id":null,"dir":"Reference","previous_headings":"","what":"addSignature — addSignature","title":"addSignature — addSignature","text":"Add signature database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addSignature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"addSignature — addSignature","text":"","code":"addSignature(conn_handler, omic_signature)"},{"path":"https://montilab.github.io/SigRepo/reference/addSignature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"addSignature — addSignature","text":"conn_handler established connection database using newConnhandler() omic_signature R6 class object OmicSignature package","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addSignatureCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"addSignatureCollection — addSignatureCollection","title":"addSignatureCollection — addSignatureCollection","text":"Add signature collection database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addSignatureCollection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"addSignatureCollection — addSignatureCollection","text":"","code":"addSignatureCollection(conn, omic_signature_collection, user_name)"},{"path":"https://montilab.github.io/SigRepo/reference/addSignatureCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"addSignatureCollection — addSignatureCollection","text":"conn established connection database using newConnhandler() omic_signature_collection collection OmicSignature objects OmicSignature package user_name user id","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addUser.html","id":null,"dir":"Reference","previous_headings":"","what":"addUser — addUser","title":"addUser — addUser","text":"Add user information database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addUser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"addUser — addUser","text":"","code":"addUser(conn_handler, user_tbl)"},{"path":"https://montilab.github.io/SigRepo/reference/addUser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"addUser — addUser","text":"conn_handler established database connection using SigRepo::newConnhandler() user_tbl data frame containing appropriate column names: user_name, user_password, user_email, user_first, user_last, user_affiliation, user_role","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addUserToSignature.html","id":null,"dir":"Reference","previous_headings":"","what":"addUserToSignature — addUserToSignature","title":"addUserToSignature — addUserToSignature","text":"Add user signature access table database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/addUserToSignature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"addUserToSignature — addUserToSignature","text":"","code":"addUserToSignature(   conn_handler,   signature_id,   user_name,   access_type = c(\"admin\", \"owner\", \"editor\", \"viewer\") )"},{"path":"https://montilab.github.io/SigRepo/reference/addUserToSignature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"addUserToSignature — addUserToSignature","text":"conn_handler handler uses establish connection remote database obtained SigRepo::newConnhandler() signature_id ID signature database user_name user name added signature access_type give permission users access signature  database admin/owner/editor/viewer admin read write access signatures owner read write access uploaded signatures editor read write access signatures  users given access viewer read access signatures  users given access ","code":""},{"path":"https://montilab.github.io/SigRepo/reference/deleteSignature.html","id":null,"dir":"Reference","previous_headings":"","what":"deleteSignature — deleteSignature","title":"deleteSignature — deleteSignature","text":"Delete signature signature table database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/deleteSignature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deleteSignature — deleteSignature","text":"","code":"deleteSignature(conn_handler, signature_id)"},{"path":"https://montilab.github.io/SigRepo/reference/deleteSignature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"deleteSignature — deleteSignature","text":"conn_handler established connection database using newConnhandler() signature_id name signature deleted database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/deleteUser.html","id":null,"dir":"Reference","previous_headings":"","what":"deleteUser — deleteUser","title":"deleteUser — deleteUser","text":"Delete user information database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/deleteUser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deleteUser — deleteUser","text":"","code":"deleteUser(conn_handler, user_name)"},{"path":"https://montilab.github.io/SigRepo/reference/deleteUser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"deleteUser — deleteUser","text":"conn_handler established database connection using SigRepo::newConnhandler() user_name data frame containing appropriate column names: user_name, user_password, user_email, user_first, user_last, user_affiliation, user_role","code":""},{"path":"https://montilab.github.io/SigRepo/reference/delete_table_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"delete_table_sql — delete_table_sql","title":"delete_table_sql — delete_table_sql","text":"delete entry database table","code":""},{"path":"https://montilab.github.io/SigRepo/reference/delete_table_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"delete_table_sql — delete_table_sql","text":"","code":"delete_table_sql(   conn,   db_table_name,   delete_coln_var,   delete_coln_val,   check_db_table = TRUE )"},{"path":"https://montilab.github.io/SigRepo/reference/delete_table_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"delete_table_sql — delete_table_sql","text":"conn established database connection using newConnhandler() db_table_name table database delete_coln_var list column variables given table delete_coln_val list column values associated column variables check_db_table whether check database table. Default = TRUE","code":""},{"path":"https://montilab.github.io/SigRepo/reference/getAPIKey.html","id":null,"dir":"Reference","previous_headings":"","what":"getAPIKey — getAPIKey","title":"getAPIKey — getAPIKey","text":"Add API Key one users database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/getAPIKey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getAPIKey — getAPIKey","text":"","code":"getAPIKey(conn_handler)"},{"path":"https://montilab.github.io/SigRepo/reference/getAPIKey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getAPIKey — getAPIKey","text":"conn_handler established database connection using newConnhandler()","code":""},{"path":"https://montilab.github.io/SigRepo/reference/getSignature.html","id":null,"dir":"Reference","previous_headings":"","what":"getSignature — getSignature","title":"getSignature — getSignature","text":"Get list signatures uploaded specified user database.","code":""},{"path":"https://montilab.github.io/SigRepo/reference/getSignature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getSignature — getSignature","text":"","code":"getSignature(conn_handler, signature_name = NULL)"},{"path":"https://montilab.github.io/SigRepo/reference/getSignature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getSignature — getSignature","text":"conn_handler handler uses establish connection database  obtained SigRepo::newConnhandler() (required) signature_name name signature belongs specific user  (user_name) previously uploaded signature database. user_name name user uploaded signature database.","code":""},{"path":"https://montilab.github.io/SigRepo/reference/insert_table_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"insert_table_sql — insert_table_sql","title":"insert_table_sql — insert_table_sql","text":"Insert table database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/insert_table_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"insert_table_sql — insert_table_sql","text":"","code":"insert_table_sql(conn, db_table_name, table, check_db_table = TRUE)"},{"path":"https://montilab.github.io/SigRepo/reference/insert_table_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"insert_table_sql — insert_table_sql","text":"conn established database connection using newConnhandler() db_table_name table database table table database check_db_table whether check database table. Default = TRUE","code":""},{"path":"https://montilab.github.io/SigRepo/reference/lookup_table_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"lookup_table_sql — lookup_table_sql","title":"lookup_table_sql — lookup_table_sql","text":"Look list variables based particular variable  associated values database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/lookup_table_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lookup_table_sql — lookup_table_sql","text":"","code":"lookup_table_sql(   conn,   db_table_name,   return_var = \"*\",   filter_coln_var = NULL,   filter_coln_val = NULL,   filter_var_by = NULL,   check_db_table = TRUE )"},{"path":"https://montilab.github.io/SigRepo/reference/lookup_table_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lookup_table_sql — lookup_table_sql","text":"db_table_name table database return_var list column variables returned given table.  Default '*' (means everything). filter_coln_var list column variables given table. Default NULL. filter_coln_val list values associated 'filter_coln_var' variables.  importantly, 'filter_coln_val' must names labels matched values 'filter_coln_var'. Default NULL. filter_var_by length(filter_coln_var) > 1, 'filter_var_by' must provided vector logical operators (e.g., /) n = length(filter_coln_var) - 1.  Default NULL.","code":""},{"path":"https://montilab.github.io/SigRepo/reference/newConnHandler.html","id":null,"dir":"Reference","previous_headings":"","what":"newConnHandler — newConnHandler","title":"newConnHandler — newConnHandler","text":"create handler connect remote database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/newConnHandler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"newConnHandler — newConnHandler","text":"","code":"newConnHandler(   dbname = \"sigrepo\",   host = \"montilab.bu.edu\",   port = 3306,   user = \"guest\",   password = \"guest\" )"},{"path":"https://montilab.github.io/SigRepo/reference/newConnHandler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"newConnHandler — newConnHandler","text":"dbname table schema want handle point. host host server want connect port host port wish use user user establishing connection password password associated user driver driver database. Default RMySQL::MySQL()","code":""},{"path":"https://montilab.github.io/SigRepo/reference/newConnHandler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"newConnHandler — newConnHandler","text":"list user credentials establish connection remote database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/searchFeature.html","id":null,"dir":"Reference","previous_headings":"","what":"searchFeature — searchFeature","title":"searchFeature — searchFeature","text":"Get list features available database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/searchFeature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"searchFeature — searchFeature","text":"","code":"searchFeature(   conn_handler,   assay_type = c(\"transcriptomics\", \"proteomics\", \"metabolomics\", \"methylomics\",     \"genetic_variations\", \"dna_binding_sites\"),   feature_name = NULL )"},{"path":"https://montilab.github.io/SigRepo/reference/searchFeature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"searchFeature — searchFeature","text":"conn_handler handler uses establish connection remote database  obtained SigRepo::newConnhandler() (required) assay_type assay type uses filter features (required).  Type assays: transcriptomics, proteomics, metabolomics, methylomics,  genetic_variations, dna_binding_sites.  Default: transcriptomics. feature_name list features search . Default NULL includes features database.","code":""},{"path":"https://montilab.github.io/SigRepo/reference/searchOrganism.html","id":null,"dir":"Reference","previous_headings":"","what":"searchOrganism — searchOrganism","title":"searchOrganism — searchOrganism","text":"Get organisms database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/searchOrganism.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"searchOrganism — searchOrganism","text":"","code":"searchOrganism(conn_handler, organism = NULL)"},{"path":"https://montilab.github.io/SigRepo/reference/searchOrganism.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"searchOrganism — searchOrganism","text":"conn_handler handler uses establish connection database  obtained SigRepo::newConnhandler() (required) organism list organisms search . Default NULL includes organisms database.","code":""},{"path":"https://montilab.github.io/SigRepo/reference/searchPhenotype.html","id":null,"dir":"Reference","previous_headings":"","what":"searchPhenotype — searchPhenotype","title":"searchPhenotype — searchPhenotype","text":"Get phenotypes database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/searchPhenotype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"searchPhenotype — searchPhenotype","text":"","code":"searchPhenotype(conn_handler, phenotype = NULL)"},{"path":"https://montilab.github.io/SigRepo/reference/searchPhenotype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"searchPhenotype — searchPhenotype","text":"conn_handler handler uses establish connection database  obtained SigRepo::newConnhandler() (required) phenotypes list phenotypes search . Default NULL includes phenotypes database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/searchPlatform.html","id":null,"dir":"Reference","previous_headings":"","what":"searchPlatform — searchPlatform","title":"searchPlatform — searchPlatform","text":"Get signatures database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/searchPlatform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"searchPlatform — searchPlatform","text":"","code":"searchPlatform(conn_handler, platform_id = NULL)"},{"path":"https://montilab.github.io/SigRepo/reference/searchPlatform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"searchPlatform — searchPlatform","text":"conn_handler handler uses establish connection database  obtained SigRepo::newConnhandler() (required) platform_id list platform accession ids search . Default NULL includes platforms database.","code":""},{"path":"https://montilab.github.io/SigRepo/reference/searchSampleType.html","id":null,"dir":"Reference","previous_headings":"","what":"searchSampleType — searchSampleType","title":"searchSampleType — searchSampleType","text":"Get sample types database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/searchSampleType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"searchSampleType — searchSampleType","text":"","code":"searchSampleType(conn_handler, sample_type = NULL)"},{"path":"https://montilab.github.io/SigRepo/reference/searchSampleType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"searchSampleType — searchSampleType","text":"conn_handler handler uses establish connection database  obtained SigRepo::newConnhandler() (required) sample_type list sample types search . Default NULL includes sample types database.","code":""},{"path":"https://montilab.github.io/SigRepo/reference/searchSignature.html","id":null,"dir":"Reference","previous_headings":"","what":"searchSignature — searchSignature","title":"searchSignature — searchSignature","text":"Get list signatures available database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/searchSignature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"searchSignature — searchSignature","text":"","code":"searchSignature(   conn_handler,   signature_name = NULL,   user_name = NULL,   organism = NULL,   phenotype = NULL,   sample_type = NULL )"},{"path":"https://montilab.github.io/SigRepo/reference/searchSignature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"searchSignature — searchSignature","text":"conn_handler handler uses establish connection database  obtained SigRepo::newConnhandler() (required) signature_name name signatures looked . user_name name user looked . organism organism looked . phenotype phenotype looked . sample_type sample type looked .","code":""},{"path":"https://montilab.github.io/SigRepo/reference/searchSignature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"searchSignature — searchSignature","text":"","code":"# Create a db connection conn_handler <- SigRepo::newConnHandler(  dbname = \"sigrepo\",   host = \"montilab.bu.edu\",   port = 3306,   user = \"guest\",   password = \"guest\" )  # Get a list of signatures available in the database signature_list <- sigRepo::searchSignatures(conn_handler = conn_handler) #> Error in loadNamespace(x): there is no package called ‘sigRepo’"},{"path":"https://montilab.github.io/SigRepo/reference/updateSignature.html","id":null,"dir":"Reference","previous_headings":"","what":"updateSignature — updateSignature","title":"updateSignature — updateSignature","text":"Update signature database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/updateSignature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"updateSignature — updateSignature","text":"","code":"updateSignature(conn_handler, signature_id, omic_signature)"},{"path":"https://montilab.github.io/SigRepo/reference/updateSignature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"updateSignature — updateSignature","text":"conn_handler established connection handler using SigRepo::newConnhandler() signature_id unique signature id database needs updated omic_signature R6 class object OmicSignature package","code":""},{"path":"https://montilab.github.io/SigRepo/reference/updateSignature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"updateSignature — updateSignature","text":"","code":"# Create a db connection conn_handler <- SigRepo::newConnHandler(  dbname = \"sigrepo\",   host = \"montilab.bu.edu\",   port = 3306,   user = \"guest\",   password = \"guest\" )  # Get a list of signatures that belongs to user = 'guest' signatures <- sigRepo::getSignatures(  conn_handler = conn_handler,  user_name = \"guest\" ) #> Error in loadNamespace(x): there is no package called ‘sigRepo’  # Update the desired signature (NOT RUN) # SigRepo::updateSignature( #  conn_handler = conn_handler, #  signature_id = signature_tbl$signature_id, #  omic_signature = omic_signature  # )"},{"path":"https://montilab.github.io/SigRepo/reference/updateUser.html","id":null,"dir":"Reference","previous_headings":"","what":"updateUser — updateUser","title":"updateUser — updateUser","text":"Update user information database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/updateUser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"updateUser — updateUser","text":"","code":"updateUser(   conn_handler,   user_name,   user_email = NULL,   user_affiliation = NULL,   user_first = NULL,   user_last = NULL,   user_role = c(\"admin\", \"editor\", \"viewer\") )"},{"path":"https://montilab.github.io/SigRepo/reference/updateUser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"updateUser — updateUser","text":"conn_handler established database connection using SigRepo::newConnhandler() user_name data frame containing appropriate column names: user_name, user_password, user_email, user_first, user_last, user_affiliation, user_role","code":""},{"path":"https://montilab.github.io/SigRepo/reference/update_table_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"update_table_sql — update_table_sql","title":"update_table_sql — update_table_sql","text":"update entry database table","code":""},{"path":"https://montilab.github.io/SigRepo/reference/update_table_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"update_table_sql — update_table_sql","text":"","code":"update_table_sql(   conn,   db_table_name,   update_coln_var,   update_coln_val,   filter_coln_var,   filter_coln_val,   check_db_table = TRUE )"},{"path":"https://montilab.github.io/SigRepo/reference/update_table_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"update_table_sql — update_table_sql","text":"conn established database connection using newConnhandler() db_table_name table database update_coln_var list column variables given table update_coln_val list column values associated column variables filter_coln_var list column values associated column variables filter_coln_val list column values associated column variables check_db_table whether check database table. Default = TRUE","code":""},{"path":"https://montilab.github.io/SigRepo/reference/validateUser.html","id":null,"dir":"Reference","previous_headings":"","what":"validateUser — validateUser","title":"validateUser — validateUser","text":"Validate user database","code":""},{"path":"https://montilab.github.io/SigRepo/reference/validateUser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"validateUser — validateUser","text":"","code":"validateUser(conn_handler)"},{"path":"https://montilab.github.io/SigRepo/reference/validateUser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"validateUser — validateUser","text":"conn_handler handler uses establish connection remote database  obtained SigRepo::newConnhandler() (required)","code":""}]
